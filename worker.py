import random
from peewee import *
import psycopg2
import time

db = PostgresqlDatabase(
	database="d8f1mjaq4lsqmk",
    user="torfxnhntooste",
    password="6173a4aac270a1b86399b085f79ed30718af3c63a585597675e62d4366c0ce8d",
    host="ec2-54-163-234-99.compute-1.amazonaws.com",
    port=5432
)

class Person(Model):
    user_id = IntegerField()
    count_messages = IntegerField()
    ban_id = IntegerField(default=0)
    class Meta:
        database = db

class Record(Model):
    total_counts = IntegerField(default=0)
    class Meta:
        database = db

Person.create_table()
Record.create_table()

class Worker:

    BOT = None
    bad_words = []
    phrases = [
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0}!‚ò∫Ô∏è\n\n–£ –Ω–∞—Å –∫—É–ª—å—Ç—É—Ä–Ω—ã–π —á–∞—Ç! –ó–¥–µ—Å—å –Ω–µ–ª—å–∑—è –º–∞—Ç–µ—Ä–∏—Ç—å—Å—è –∏ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.üö´\n–í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–º —Å–≤–µ—Ä—Ö—É —Å–æ–æ–±—â–µ–Ω–∏–∏üëÜ\n\n–î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è? –†–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ!ü§ó",
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {0}!‚úãÔ∏è\n\n–£ –Ω–∞—Å –∫—É–ª—å—Ç—É—Ä–Ω—ã–π —á–∞—Ç! –ó–¥–µ—Å—å –Ω–µ–ª—å–∑—è –º–∞—Ç–µ—Ä–∏—Ç—å—Å—è –∏ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.üö´\n–í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–º —Å–≤–µ—Ä—Ö—É —Å–æ–æ–±—â–µ–Ω–∏–∏üëÜ\n\n–†–∞—Å—Å–∫–∞–∂–µ—à—å —á—Ç–æ-–Ω–∏–±—É–¥—å –æ —Å–µ–±–µ?üòä",
        "–ö–∞–∫–∏–µ –ª—é–¥–∏! –ü—Ä–∏–≤–µ—Ç, {0}!üòé\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã, –∞ —Ç–æ –∑–∞–±–∞–Ω—é. –®—É—Ç–∫–∞ü§£\n–í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–º —Å–≤–µ—Ä—Ö—É —Å–æ–æ–±—â–µ–Ω–∏–∏üëÜ\n\n–î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è? –†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –æ —Å–µ–±–µü§ó",
        "–ü—Ä–∏–≤–µ—Ç, {0}!ü§ì\n\n–£ –Ω–∞—Å –æ—á–µ–Ω—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —á–∞—Ç, —Ç–∞–∫ —á—Ç–æ –Ω–µ –±–æ–π—Å—è –ø–∏—Å–∞—Ç—å, –º—ã –Ω–µ –∫—É—Å–∞–µ–º—Å—è!üòÑ –¢–æ–ª—å–∫–æ –Ω–µ –º–∞—Ç–µ—Ä–∏—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞üòâ\n\n–í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–º —Å–≤–µ—Ä—Ö—É —Å–æ–æ–±—â–µ–Ω–∏–∏üëÜ"
    ]

    def __init__(self, _bot):
        self.BOT = _bot
        with open('badwords.txt', 'r', encoding='cp1251') as f:  
            content = f.readlines()
            for word in content:
                self.bad_words.append(word[:-1])

    def HelloUser(self, _message):
        user_name = _message.new_chat_member.first_name
        self.BOT.send_message(_message.chat.id, random.choice(self.phrases).format(user_name))

    def Counter(self, user_id):
        try:
            a = Person.get(Person.user_id == user_id)
            a.count_messages += 1
            a.save()
        except DoesNotExist:
            Person.create(user_id=user_id, count_messages = 1, ban_id=0)

    def FindBadWord(self, text):
        text = text.lower()
        for word in self.bad_words:
            if word in text:
                return True
        return False

    def BlockUser(self, user_id, message_id, chat_id, first_name):
        a = Person.get(Person.user_id == user_id)
        a.ban_id = a.ban_id + 1
        a.save()
        now = time.time()
        if a.ban_id >= 3:
            self.BOT.restrict_chat_member(chat_id, user_id, until_date=now+3600)
            self.BOT.send_message(chat_id, "<b>{} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω(–∞) –Ω–∞ 1 —á–∞—Å</b>\n\n{}, —É –Ω–∞—Å –Ω–µ–ª—å–∑—è –º–∞—Ç–µ—Ä–∏—Ç—å—Å—è!\n–í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –±—É–¥–µ—Ç —Å—Ç—Ä–æ–∂–µ!".format(first_name, first_name), parse_mode="html")
        elif a.ban_id == 2:
            self.BOT.restrict_chat_member(chat_id, user_id, until_date=now+300)
            self.BOT.send_message(chat_id, "<b>{} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω(–∞) –Ω–∞ 5 –º–∏–Ω—É—Ç</b>\n\n{}, —É –Ω–∞—Å –Ω–µ–ª—å–∑—è –º–∞—Ç–µ—Ä–∏—Ç—å—Å—è!\n–í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –±—É–¥–µ—Ç —Å—Ç—Ä–æ–∂–µ!".format(first_name, first_name), parse_mode="html")
        else:
            self.BOT.restrict_chat_member(chat_id, user_id, until_date=now+60)
            self.BOT.send_message(chat_id, "<b>{} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω(–∞) –Ω–∞ 1 –º–∏–Ω—É—Ç—É</b>\n\n{}, —É –Ω–∞—Å –Ω–µ–ª—å–∑—è –º–∞—Ç–µ—Ä–∏—Ç—å—Å—è!\n–í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –±—É–¥–µ—Ç —Å—Ç—Ä–æ–∂–µ!".format(first_name, first_name), parse_mode="html")
        self.BOT.delete_message(chat_id, message_id)

    def CurrentWord(self, number):                  
        iy = ['11', '12', '13', '14', '5', '6', '7', '8', '9', '0']
        if number.endswith('1'):
            return "—Å–æ–æ–±—â–µ–Ω–∏–µ"
        elif number.endswith('2') or number.endswith('3') or number.endswith('4'):
            return "—Å–æ–æ–±—â–µ–Ω–∏—è"
        else:
            for i in range(len(iy)):
                if iy[i] in number:
                    return "—Å–æ–æ–±—â–µ–Ω–∏–π"

    def GetStat(self, _day):
        stat = ""
        iter = 0
        for one in Person.select().order_by(Person.count_messages.desc()).limit(10):
            try:
                _user = self.BOT.get_chat_member(-1001137097313, one.user_id)
                name = "@" + _user.user.username if _user.user.username != None else _user.user.first_name
                if iter == 0: 
                    stat += f"ü•á{name} - {one.count_messages}\n"
                    iter += 1
                elif iter == 1:
                    stat += f"ü•à{name} - {one.count_messages}\n"
                    iter += 1
                elif iter == 2:
                    stat += f"ü•â{name} - {one.count_messages}\n"
                    iter += 1
                else:
                    stat += f"     {name} - {one.count_messages}\n"
            except Exception:
                pass
        total = 0
        for i in Person.select():
            total += i.count_messages

        insert = ""
        for rec in Record.select():
            self.BOT.send_message(497551952, f"~~~~~~~~\ntotal = {total}\nrec = {rec}\nrec.total_counts = {rec.total_counts}\n~~~~~~~~~~~")
            if total > rec.total_counts:
                insert = "–ú—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –Ω–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥!üéâ"
                a = Record.create(total_counts=total)
                rec.delete_instance()
                a.save()                    
            else:
                res = rec.total_counts - total
                insert = f"–ï—â—ë –±—ã <b>{res}</b> {self.CurrentWord(str(res))} –∏ –º—ã –ø–æ–±–∏–ª–∏ –±—ã –ø—Ä–æ—à–ª—ã–π —Ä–µ–∫–æ—Ä–¥üòå"
        if _day == 0:
            for per in Person.select():
                per.count_messages = 0
                per.save()
        letter = "–í–æ—Ç –∏ –ø–æ–¥–æ—à–ª–∞ –∫ –∫–æ–Ω—Ü—É –µ—â—ë –æ–¥–Ω–∞ –Ω–µ–¥–µ–ª—è! –ò –≤–æ—Ç –≤–∞–º –Ω–µ–º–Ω–æ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:\n\n<i>–°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏:</i>\n{}\n–ê –≤—Å–µ–≥–æ –±—ã–ª–æ –Ω–∞–ø–µ—á–∞—Ç–∞–Ω–æ <b>{}</b> {}!\n{}\n\n–£–¥–∞—á–∏ –≤ –Ω–∞—Å—Ç—É–ø–∞—é—â–µ–π –Ω–µ–¥–µ–ª–µ!üòâ".format(stat, total, self.CurrentWord(str(total)), insert)
        return letter

        ##