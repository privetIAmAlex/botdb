from random import choice
from peewee import PostgresqlDatabase, Model, IntegerField, DoesNotExist
from re import findall
import time
phrases = [
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0}!‚ò∫Ô∏è\n\n–£ –Ω–∞—Å –∫—É–ª—å—Ç—É—Ä–Ω—ã–π —á–∞—Ç! –ó–¥–µ—Å—å –Ω–µ–ª—å–∑—è –º–∞—Ç–µ—Ä–∏—Ç—å—Å—è –∏ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.üö´\n–í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–º —Å–≤–µ—Ä—Ö—É —Å–æ–æ–±—â–µ–Ω–∏–∏üëÜ",
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {0}!‚úãÔ∏è\n\n–£ –Ω–∞—Å –∫—É–ª—å—Ç—É—Ä–Ω—ã–π —á–∞—Ç! –ó–¥–µ—Å—å –Ω–µ–ª—å–∑—è –º–∞—Ç–µ—Ä–∏—Ç—å—Å—è –∏ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.üö´\n–í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–º —Å–≤–µ—Ä—Ö—É —Å–æ–æ–±—â–µ–Ω–∏–∏üëÜ",
        "–ö–∞–∫–∏–µ –ª—é–¥–∏! –ü—Ä–∏–≤–µ—Ç, {0}!üòé\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã (–∏—Ö —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–º —Å–≤–µ—Ä—Ö—É —Å–æ–æ–±—â–µ–Ω–∏–∏üëÜ), –∞ —Ç–æ –∑–∞–±–∞–Ω—é. –®—É—Ç–∫–∞ü§£",
        "–ü—Ä–∏–≤–µ—Ç, {0}!ü§ì\n\n–£ –Ω–∞—Å –æ—á–µ–Ω—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —á–∞—Ç, —Ç–∞–∫ —á—Ç–æ –Ω–µ –±–æ–π—Å—è –ø–∏—Å–∞—Ç—å, –º—ã –Ω–µ –∫—É—Å–∞–µ–º—Å—è!üòÑ \n\n–ü—Ä–∞–≤–∏–ª–∞ —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–º —Å–≤–µ—Ä—Ö—É —Å–æ–æ–±—â–µ–Ω–∏–∏üëÜ"
    ]

db = PostgresqlDatabase(
	database="d8f1mjaq4lsqmk",
    user="torfxnhntooste",
    password="6173a4aac270a1b86399b085f79ed30718af3c63a585597675e62d4366c0ce8d",
    host="ec2-54-163-234-99.compute-1.amazonaws.com",
    port=5432
)

class Person(Model):
    id = IntegerField()
    count_messages = IntegerField()
    class Meta:
        database = db

Person.create_table()

bad_words = []

class Worker():
    def __init__(self, bot):
        self._bot = bot
        with open('badwords.txt', 'r', encoding='cp1251') as file:
            content = file.readlines()
            for word in content:
                bad_words.append(word[:-1])

    def HelloUser(self, chat_id, user_name):
        self._bot.send_message(chat_id, choice(phrases).format(user_name))

    def Counter(self, user_id):
        try:
            p = Person.get(id=user_id)
            p.count_messages += 1
            p.save()
        except DoesNotExist:
            Person.create(id=user_id, count_messages=1).save()

    def GetAsterics(self, x):
        return "*" * (x - 2)

    def FindBadWord(self, chat_id, first_name, text):
        text_array = findall(r"[\w']+", text.lower())
        flag = False
        for word in text_array:
            if word in bad_words:
                new_word = word.replace(word[:-2], self.GetAsterics(len(word)))
                text = text.replace(word, new_word)
                flag=True
        if flag:
            self._bot.send_message(chat_id, f"<b>{first_name}:</b> {text}", parse_mode="HTML")

    def CurrentWord(self, number):                  
        iy = ['11', '12', '13', '14', '5', '6', '7', '8', '9', '0']
        if number.endswith('1'):
            return "—Å–æ–æ–±—â–µ–Ω–∏–µ"
        elif number.endswith('2') or number.endswith('3') or number.endswith('4'):
            return "—Å–æ–æ–±—â–µ–Ω–∏—è"
        else:
            for i in range(len(iy)):
                if iy[i] in number:
                    return "—Å–æ–æ–±—â–µ–Ω–∏–π"

    def AdminPanel(self, command):
        print("–ó–∞—à—ë–ª –≤ –º–µ—Ç–æ–¥")
        stat = ""
        iter = 0
        for one in Person.select().order_by(Person.count_messages.desc()).limit(10):
            print("–í —Ü–∏–∫–ª–µ")
            try:
                _user = self._bot.get_chat_member(-1001137097313, one.id)
                name = "@" + _user.user.username if _user.user.username != None else _user.user.first_name
                if iter == 0: 
                    stat += f"ü•á{name} - {one.count_messages}\n"
                    iter += 1
                elif iter == 1:
                    stat += f"ü•à{name} - {one.count_messages}\n"
                    iter += 1
                elif iter == 2:
                    stat += f"ü•â{name} - {one.count_messages}\n"
                    iter += 1
                else:
                    stat += f"     {name} - {one.count_messages}\n"
            except Exception:
                stat += f"~outgoing - {one.count_messages}\n"
                iter += 1
        print("–í—ã—à–µ–ª –∏–∑ —Ü–∏–∫–ª–∞")
        total = 0
        for i in Person.select():
            total += i.count_messages
        letter = "–í–æ—Ç –∏ –ø–æ–¥–æ—à–ª–∞ –∫ –∫–æ–Ω—Ü—É –µ—â—ë –æ–¥–Ω–∞ –Ω–µ–¥–µ–ª—è! –ò –≤–æ—Ç –≤–∞–º –Ω–µ–º–Ω–æ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:\n\n<i>–°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏:</i>\n{}\n–ê –≤—Å–µ–≥–æ –±—ã–ª–æ –Ω–∞–ø–µ—á–∞—Ç–∞–Ω–æ <b>{}</b> {}!\n\n–£–¥–∞—á–∏ –≤ –Ω–∞—Å—Ç—É–ø–∞—é—â–µ–π –Ω–µ–¥–µ–ª–µ!üòâ".format(stat, total, self.CurrentWord(str(total)))
        
        if command == "send_stat_me":
            print("–ü—Ä–∏–Ω—è–ª –∫–æ–º–∞–Ω–¥—É")
            self._bot.send_message(497551952, letter, parse_mode="HTML")
        elif command == "send_stat":
            if time.strftime("%w") == 0:
                self._bot.send_message(-1001137097313, letter, parse_mode="HTML")            